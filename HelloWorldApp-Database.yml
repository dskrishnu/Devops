
trigger:
- none
##- master
##- development

stages:
- stage: "BuildStage"
  jobs:
  - job: "BuildJob"
    pool:
      vmImage: windows-latest

    variables:
    - group: SqlServer
     buildConfiguration: 'Release'
     ProjectName: '**/*.csproj'

    steps:

    - template: templates/Build.yml
      parameters:
        buildConfiguration: 'Release'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

    - task: VSBuild@1
      displayName: 'Build Azure SQL'
      inputs:
        solution: '**\*.sqlproj'
        msbuildArgs: '/p:OutDir="$(build.artifactStagingDirectory)"'

- stage: "DeployToDev"
  dependsOn: "BuildStage" 
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
  jobs:
  - deployment: 
    environment: Development
    pool:
      vmImage: windows-latest

    variables:
    - group: SqlServer
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: drop

            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'HelloWorldApp-ServiceConnection'
                appType: 'webApp'
                WebAppName: 'hwa-dev'
                packageForLinux: '$(pipeline.workspace)/**/*.zip'

            - task: SqlAzureDacpacDeployment@1
              displayName: 'Azure SQL : DacpacTask'
              inputs:
                AuthenticationType: 'server'
                ServerName: '$(ServerName)'
                DatabaseName: '$(DatabaseName)'
                SqlUsername: '$(SqlUsername)'
                SqlPassword: '$(SqlPassword)'
                deployType: 'DacpacTask'
                DeploymentAction: 'Publish'
                DacpacFile: '$(System.DefaultWorkingDirectory)\**\*.dacpac'
                IpDetectionMethod: 'AutoDetect'

